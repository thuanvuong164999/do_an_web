{"version":3,"sources":["services/socket-service/socket-service.js","components/login/login.js","components/message-item/message-item.js","components/message-list/message-list.js","components/send-message/send-message.js","components/emoji-menu/emoji.js","components/channels-list/channels-list.js","components/messenger-list/messengerlist.js","components/serch/serch.js","components/room-list/room-list.js","components/head-chatbox/head-chatbox.js","components/head-roomlist/head-roomlist.js","components/chat/chat.js","components/auth/auth.js","router.js","App.js","serviceWorker.js","index.js"],"names":["serverEndPoint","socket","socketIOClient","userName","LoginPages","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClick","event","emit","state","react_default","a","createElement","Fragment","id","className","type","placeholder","href","value","src","React","Component","MessageItem","props","fr","es","name","user","size","maxInitials","round","message","DaT","MessageList","receiveMessages","avatar","messages","typing","users_typing","onReceived","receiveHistories","onStopTyping","onTypingFromMember","_this2","on","item","ava","items","push","setState","_this3","concat","values","console","log","rows","map","index","username","trim","_this4","listUsers","indexOf","splice","status","length","_this5","includes","setMessage","react_scroll_to_bottom_lib_default","message_item_message_item","key","join","SendMessage","onKeyPress","target","room","text","onChange","changeInput","onJoined","onLeaved","axios","require","ChannelList","inRoomName","self","get","then","response","data","catch","error","finally","class","e","MessList","Serch","RoomList","rooms","serch_serch","channels_list_channels_list","messenger_list_messengerlist","HeadChatBox","roomName","HeadRoomList","Chat","head_roomlist_head_roomlist","room_list_room_list","head_chatbox_head_chatbox","message_list_message_list","send_message_send_message","Auth","cookies","Cookies","logined","react_router","to","orRedirectTo","orRender","renderRedirect","MainRouter","react_router_dom","exact","path","render","auth","chat_chat","component","App","router","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.269d6524.chunk.js","sourcesContent":["import socketIOClient from 'socket.io-client'\r\n\r\n//khai báo các biến không đổi và sử dụng thường xuyên\r\nexport const serverEndPoint = 'http://cd4ebab3.ngrok.io'\r\n\r\nexport const socket = socketIOClient(serverEndPoint)\r\nexport const userName = 'Kim Son'","import React from 'react'\r\nimport './login.scss'\r\nimport { socket } from '../../services/socket-service/socket-service';\r\nimport {Button, ButtonToolbar} from 'react-bootstrap'\r\n\r\nclass LoginPages extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    onClick = event => {\r\n        socket.emit('')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div id=\"login-form\">\r\n                    <div id=\"login-form-emoji-zone\">\r\n                        <div id=\"emoji\">\r\n                            <div id=\"emoji-head\">\r\n                                <div className=\"emoji-eye\">\r\n                                    <div className=\"emoji-pupil\"></div>\r\n                                </div>\r\n                                <div className=\"emoji-eye\">\r\n                                    <div className=\"emoji-pupil\"></div>\r\n                                </div>\r\n                                <div id=\"emoji-mouth\" className=\"emoji-mouth\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <input id=\"login-form-username\" className=\"login-form-control login-form-text\" type=\"text\" placeholder=\"USERNAME\"></input>\r\n                    <input id=\"login-form-password\" className=\"login-form-control login-form-text\" type=\"password\"\r\n                        placeholder=\"PASSWORD\"></input>\r\n                    <a href='/chat'><button className=\"login-form-control login-form-button\" type='submit' value='LOGIN'>LOGIN</button></a>\r\n                    <a className=\"login-form-link\" href=\"/chat\">LOST YOUR PASSWORD ?</a>\r\n                    {/* <audio id=\"whistle-audio\" src=\"audio/whistle.wav\" loop></audio> */}\r\n                    {/* <audio id=\"wink-audio\" src=\"audio/wink.wav\"></audio> */}\r\n                    {/* <audio id=\"rotation-audio\" src=\"audio/rotation.wav\"></audio> */}\r\n                    <script src=\"./animation.js\"></script>\r\n                </div>\r\n                {/* <div>\r\n                        <ButtonToolbar>\r\n                            <Button variant=\"primary\" size=\"lg\">\r\n                            Large buttonhhhhhhh\r\n                            </Button>\r\n                            <Button variant=\"secondary\" size=\"lg\">\r\n                            Large button\r\n                            </Button>\r\n                        </ButtonToolbar>\r\n                </div> */}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginPages","import React from 'react'\r\nimport './message-item.scss'\r\nimport Avatar from 'react-avatar';\r\n\r\nclass MessageItem extends React.Component {\r\n    \r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className='message-item'>\r\n                    <div className={'message-item-avatar ' + this.props.value.fr}>\r\n                        <div className='avatar-img'>\r\n                            <Avatar name={this.props.value.user} size=\"50\" maxInitials={2} round={true} />\r\n                        </div>\r\n                    </div>\r\n                    <div className={'message-item-content ' + this.props.value.fr}>\r\n                        <div className='content'>\r\n                            <span className='chat-user'>{this.props.value.user}</span>\r\n                            <br></br>\r\n                            <span className='chat-content'>{this.props.value.message}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className={'message-item-time ' + this.props.value.fr}>\r\n                        <div className='created'>{this.props.value.DaT}</div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessageItem","import React from 'react'\r\nimport './message-list.scss'\r\nimport MessageItem from '../message-item/message-item';\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\nimport { socket, userName } from '../../services/socket-service/socket-service'\r\n\r\nclass MessageList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            DaT: '',\r\n            receiveMessages: '',\r\n            userName: userName,\r\n            message: '',\r\n            avatar: '',\r\n            messages: [],\r\n            typing: false,\r\n            users_typing: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onReceived()\r\n        this.receiveHistories()\r\n        this.onStopTyping()\r\n        this.onTypingFromMember()\r\n    }\r\n\r\n    onReceived() {\r\n        socket.on('receive-message', (value) => {\r\n            // console.log(value)\r\n            let item = {\r\n                user: value.userName,\r\n                ava: value.avatar,\r\n                message: value.message,\r\n                DaT: value.DaT,\r\n                fr: value.userName === this.state.userName ? 'fr' : ''\r\n            }\r\n            let items = this.state.messages\r\n            items.push(item)\r\n            this.setState({\r\n                messages: items\r\n            })\r\n        })\r\n    }\r\n\r\n    receiveHistories() {\r\n        // console.log(`histories-${this.state.userName}`)\r\n        socket.on(`histories-${this.state.userName}`, (values) => {\r\n            console.log(values)\r\n            let items = []\r\n            values.rows.map((value, index) => {\r\n                // console.log(value)\r\n                let user = value.username.trim()\r\n                let item = {\r\n                    user: user,\r\n                    avatar: value.username,\r\n                    message: value.message,\r\n                    DaT: value.DaT,\r\n                    fr: user === this.state.userName ? 'fr' : ''\r\n                }\r\n                items.push(item)\r\n            })\r\n            this.setState({\r\n                messages: items\r\n            })\r\n\r\n            if (values.userName !== this.state.userName) {\r\n                return\r\n            }\r\n        })\r\n    }\r\n\r\n    onStopTyping() {\r\n        socket.on('member_stop_typing', (user) => {\r\n            \r\n            let listUsers = this.state.users_typing\r\n            let index = listUsers.indexOf(user.userName)\r\n            if (index !== -1) {\r\n                listUsers.splice(index, 1)\r\n            }\r\n\r\n            let status = true\r\n            if (listUsers.length === 0) {\r\n                status = false\r\n            }\r\n            this.setState({\r\n                typing: status,\r\n                users_typing: listUsers\r\n            })\r\n        })\r\n    }\r\n\r\n    onTypingFromMember() {\r\n        socket.on('member_typing', (user) => {\r\n            \r\n            if (user.userName !== this.state.userName) {\r\n                let listUsers = this.state.users_typing\r\n\r\n                if (!listUsers.includes(user.userName)) {\r\n                    listUsers.push(user.userName)\r\n                }\r\n\r\n                this.setState({\r\n                    typing: true,\r\n                    users_typing: listUsers\r\n                })\r\n                this.setMessage(`${user.userName} typing ....`)\r\n            }\r\n        })\r\n    }\r\n\r\n    setMessage(message) {\r\n        let messages = this.state.receiveMessages\r\n        messages = message + '\\n' + messages\r\n        this.setState({\r\n            receiveMessages: messages\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className='receive-message-bg'>\r\n                    <ScrollToBottom className='message-list-container'>\r\n                        <div className='message-list'>\r\n                            {\r\n                                this.state.messages.map((value, index) => {\r\n                                    return (\r\n                                        <MessageItem key={index} value={value}></MessageItem>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </ScrollToBottom>\r\n                    <div className={'typing ' + (this.state.typing ? 'show' : '')}>\r\n                        <div>{this.state.users_typing.join(',') + ' typing ...'}</div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessageList","import React from 'react'\r\nimport './send-message.scss'\r\nimport { socket, userName } from '../../services/socket-service/socket-service'\r\nimport EmojiMenu from '../emoji-menu/emoji';\r\n\r\nclass SendMessage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            DaT: '',\r\n            receiveMessages: '',\r\n            userName: userName,\r\n            message: '',\r\n            avatar: '',\r\n            messages: [],\r\n            room: 0,\r\n            changeInput: '',\r\n            text: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onJoined()\r\n        this.onLeaved()\r\n    }\r\n\r\n    onJoined() {\r\n        socket.on('joined', (user) => {\r\n            console.log('Joined: ', user)\r\n            this.setMessage(`User ${user.userName} joined ${user.room}`)\r\n            this.setState({\r\n                room: user.room\r\n            })\r\n        })\r\n    }\r\n\r\n    onLeaved() {\r\n        socket.on('leaved', (user) => {\r\n            console.log('Leaved: ', user)\r\n            this.setMessage(`User ${user.userName} leaved ${user.room}`)\r\n        })\r\n    }\r\n\r\n    setMessage(message) {\r\n        let messages = this.state.receiveMessages\r\n        messages = message + '\\n' + messages\r\n        this.setState({\r\n            receiveMessages: messages\r\n        })\r\n    }\r\n\r\n    onKeyPress = event => {\r\n        if (event.key === 'Enter') {\r\n            // console.log(event.target.value)\r\n            if (event.target.value === '')\r\n                return;\r\n            else {\r\n                socket.emit('send-message', {\r\n                    userName: this.state.userName,\r\n                    message: event.target.value,\r\n                    room: this.state.room\r\n                })\r\n            }\r\n            this.setState({\r\n                message: '',\r\n                text:''\r\n            })\r\n        }\r\n    }\r\n\r\n    onClick = event => {\r\n\r\n    }\r\n\r\n    join() {\r\n        socket.emit('join', {\r\n            userName: this.state.userName,\r\n            avatar: this.state.avatar\r\n        })\r\n    }\r\n\r\n    leave() {\r\n        socket.emit('leave', {\r\n            userName: this.state.userName\r\n        })\r\n    }\r\n\r\n    onChange = event => {\r\n        // console.log(event.target.value)\r\n        this.setState({\r\n            message: event.target.value,\r\n        })\r\n\r\n        this.setState({\r\n            changeInput: '<span role=\"image\" aria-label=\"slightly-smiling-face\">&#x1f642</span>'\r\n        })\r\n\r\n        socket.emit('typing', {\r\n            userName: this.state.userName,\r\n            text: event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className='send-message-bg'>\r\n                    <div className='boder-bg'>\r\n                        <div className='input-area'>\r\n                            <div className='send-enter-icon'></div>\r\n                            <input placeholder={`Message ${userName}`} onKeyPress={this.onKeyPress} onChange={this.onChange} value={this.state.message}></input>\r\n                            <div className='emoji-icon'></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SendMessage;","import React from 'react'\r\nimport './emoji.scss'\r\n\r\nclass EmojiMenu extends React.Component {\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className='React-Menu-Control'>\r\n                    <div className='cover-menu-popup' id='overlay-menu' onClick={e => this.onOffEmoij(e)}>\r\n                        <div className='menu-popup' id='emojiMenu_Popup'>\r\n                            <div className='menu-container'>\r\n                                <div className='menu-title'>\r\n                                    <span className='title'>Emoji Menu</span>\r\n                                </div>\r\n                                <div className='emoji-input-container'>\r\n                                    <i class=\"fas fa-search\"></i>\r\n                                    <input className='input-emoji-name' type='text' placeholder='Search Emoji' ></input>\r\n\r\n                                </div>\r\n                                <div className='emoji-container-list'>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EmojiMenu;","import React from 'react'\r\nimport './channels-list.scss'\r\nimport { serverEndPoint, socket, userName } from '../../services/socket-service/socket-service'\r\n\r\nconst axios = require('axios')\r\n\r\n\r\nclass ChannelList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            room: [],\r\n            inRoomName: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let self = this\r\n        \r\n        axios.get(`${serverEndPoint}/api/room-list/chanels`)\r\n            .then(function (response) {\r\n                self.setState({\r\n                    room: response.data.data\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n            .finally(function () {\r\n\r\n            });\r\n    }\r\n    \r\n    onClick = (event, id, name) => {\r\n        console.log('Clicked', id)\r\n        socket.emit('join', {\r\n            userName: userName,\r\n            room: id,\r\n            inRoomName: name\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <ul className='chanellist-bg'>\r\n                    <li className='title-chanels'>\r\n                        <i class=\"fas fa-plus-circle\"></i>\r\n                        <div className='title'>Chanels</div>\r\n                    </li>\r\n                    <li className='list'><ul>\r\n                        {\r\n                            this.state.room.map((value, index) => {\r\n                                return (\r\n                                    <li key={index} onClick={(e) => this.onClick(e, value.id, value.name)}>{value.name}</li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul></li>\r\n                </ul>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChannelList","import React from 'react'\r\nimport './messengerlist.scss'\r\nimport { serverEndPoint, socket, userName } from '../../services/socket-service/socket-service'\r\nconst axios = require('axios');\r\n\r\nclass MessList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            room: [],\r\n            inRoomName:''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let self = this\r\n\r\n        axios.get(`${serverEndPoint}/api/room-list/messengers`)\r\n            .then(function (response) {\r\n                self.setState({\r\n                    room: response.data.data\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n            .finally(function () {\r\n\r\n            });\r\n    }\r\n\r\n    onClick = (event, id, name) => {\r\n        console.log('Clicked', id)\r\n\r\n        socket.emit('join', {\r\n            userName: userName,\r\n            room: id,\r\n            inRoomName: name\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <ul className='messengerlist-bg'>\r\n                    <div className='addb'>\r\n                        + Add the chanels\r\n                    </div>\r\n                    <li className='title-chanels'>\r\n                        <i class=\"fas fa-plus-circle\"></i>\r\n                        <div className='title'>Direct message</div>\r\n                    </li>\r\n                    <li className='list'><ul>\r\n                        {\r\n                            this.state.room.map((value, index) => {\r\n                                return (\r\n                                    <li key={index} onClick={(e) => this.onClick(e, value.id)}>{value.name}</li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul></li>\r\n                </ul>\r\n                \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessList\r\n\r\n","import React from 'react'\r\nimport './serch.scss'\r\n\r\nclass Serch extends React.Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className>\r\n                    <input type=\"text\" placeholder=\"Search..\"></input>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Serch","import React from 'react'\r\nimport './room-list.scss'\r\nimport { serverEndPoint, socket, userName } from '../../services/socket-service/socket-service'\r\nimport ChannelList from '../channels-list/channels-list';\r\nimport MessList from '../messenger-list/messengerlist';\r\nimport Serch from '../serch/serch'\r\n\r\nconst axios = require('axios');\r\n\r\nclass RoomList extends React.Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            rooms: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let self = this\r\n\r\n        axios.get(`${serverEndPoint}/api/room-list`)\r\n            .then(function (response) {\r\n                // console.log(response);\r\n                // console.log(response.data.data);\r\n                self.setState({\r\n                    rooms: response.data.data\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n            .finally(function () {\r\n\r\n            });\r\n\r\n        axios.get(`${serverEndPoint}/api/room-list/messengers`)\r\n            .then(function (response) {\r\n                self.setState({\r\n                    rooms: response.data.data\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n            .finally(function () {\r\n\r\n            });\r\n    }\r\n\r\n    onClick = (event, id) => {\r\n        console.log('Clicked', id)\r\n\r\n        socket.emit('join', {\r\n            userName: userName,\r\n            room: id\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div>\r\n                    <Serch></Serch>\r\n                </div>\r\n                <ul className='room-bg'>\r\n                    <li>{\r\n                        <ChannelList></ChannelList>\r\n                    }</li>\r\n                    <li>{\r\n                        <MessList></MessList>\r\n                    }</li>\r\n                </ul>\r\n                <div class=\"scrollbar\">\r\n                    <div class=\"force-overflow\"></div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomList","import React from 'react'\r\nimport './head-chatbox.scss'\r\nimport {userName, socket} from '../../services/socket-service/socket-service'\r\n\r\nclass HeadChatBox extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            roomName:''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.inRoomName()\r\n    }\r\n\r\n    // inRoomName(){\r\n    //     socket.on('join', (value) =>{\r\n    //         this.setState({\r\n    //             roomName: value.inRoomName\r\n    //         })\r\n    //     })\r\n    // }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <div className='headchatbox-bg'>\r\n                    <div className='name-room'>\r\n                        <div className='input-name'>{this.state.roomName}</div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeadChatBox","import React from 'react'\r\nimport './head-roomlist.scss'\r\nimport { userName } from '../../services/socket-service/socket-service';\r\n\r\nclass HeadRoomList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <div className='headroomlist-bg'>\r\n                    <div className='ic-bell'>\r\n                        <i class=\"fas fa-bell\"></i>\r\n                    </div>\r\n                    <div className='title-room'>\r\n                        WEB-D002 \r\n                    </div>\r\n                    <div className='input-username'>\r\n                        <div className='status-user'></div>\r\n                        <div className='username'>\r\n                        <i class=\"fas fa-circle\"></i>{userName}</div>\r\n                    </div>\r\n                </div>\r\n                {/* <div className='icon-c'>\r\n                    <i class=\"fas fa-bell\"></i>\r\n                </div> */}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeadRoomList","import React from 'react'\r\nimport './chat.scss';\r\nimport MessageList from '../message-list/message-list'\r\nimport SendMessage from '../send-message/send-message';\r\nimport RoomList from '../room-list/room-list';\r\nimport HeadChatBox from '../head-chatbox/head-chatbox';\r\nimport HeadRoomList from '../head-roomlist/head-roomlist';\r\n\r\nclass Chat extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"chat\">\r\n                    <div className='roomlist-bg'>\r\n                        {\r\n                            <HeadRoomList></HeadRoomList>\r\n                        }\r\n                        {\r\n                            <RoomList></RoomList>\r\n                        }\r\n                    </div>\r\n                    <div className='chat-box'>\r\n                        {\r\n                            <HeadChatBox></HeadChatBox>\r\n                        }\r\n                        {\r\n                            <MessageList></MessageList>\r\n                        }\r\n                        {\r\n                            <SendMessage></SendMessage>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chat;","import React from 'react'\r\nimport Cookies from 'universal-cookie';\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass Auth extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        const cookies = new Cookies();\r\n\r\n        this.state = {\r\n            logined: cookies.get('isLogin') \r\n        }\r\n\r\n        console.log(this.state)\r\n    }\r\n    renderRedirect() {\r\n        if (this.state.logined !== 'true') {\r\n            return <Redirect to={this.props.orRedirectTo}></Redirect>\r\n        } else {\r\n            return this.props.orRender\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.renderRedirect()}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Auth","import React from 'react'\r\nimport { Switch, Route, BrowserRouter } from 'react-router-dom'\r\nimport LoginPages from './components/login/login'\r\nimport Chat from './components/chat/chat'\r\nimport Auth from './components/auth/auth'\r\n\r\nconst MainRouter = () => (\r\n    <main>\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path='/' render={\r\n                    () => (\r\n                        <Auth orRedirectTo='/login' orRender={\r\n                            <Chat></Chat>\r\n                        }></Auth>\r\n                    )\r\n                }></Route>\r\n                <Route path='/login' component={LoginPages}></Route>\r\n                <Route path='/' component={Chat}></Route>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    </main>\r\n)\r\nexport default MainRouter","import React from 'react';\r\nimport './App.scss';\r\nimport MainRouter from './router';\r\n\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          <MainRouter></MainRouter>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}